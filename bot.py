import os
import telebot
from dotenv import load_dotenv

from models import VoiceMessage, session

load_dotenv('.env')
bot_token = os.getenv('BOT_TOKEN')

bot = telebot.TeleBot(bot_token)

bot.set_my_commands([telebot.types.BotCommand("start", "–ó–∞–ø—É—Å—Ç–∏ –¥–æ–¥—ñ–∫–∞"),
                     telebot.types.BotCommand("send", "–°–∫–∏–Ω—å –¥–æ–¥—ñ–∫—É –≥–æ–ª–æ—Å–æ–≤–µ"),
                     telebot.types.BotCommand("list", "–í–∏–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –≥–æ–ª–æ—Å–æ–≤–∏—Ö")])


@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "–ö—É-—É-—É-—É-—É. –Ø –±—Ä–∏–≥–∞–¥–æ–±–æ—Ç.\n–ú–∞–≤ –±–∏ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∑–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ—é –∫–æ–º–∞–Ω–¥–æ—é: \n\n"
                                      "@brigadelorebot send <voice message name>\n\n–Ñ–±–∞—à! üé∂")


@bot.message_handler(commands=['addvoice'])
def handle_addvoice_name(message):
    bot.send_message(message.chat.id, "–ù–∞–¥—ñ—à–ª–∏ –≥–æ–ª–æ—Å–æ–≤–µ.")
    bot.register_next_step_handler(message, handle_voice_message)


@bot.message_handler(content_types=['voice'])
def handle_voice_message(message):
    if message.voice:
        name = message.caption
        if not name:
            bot.send_message(message.chat.id, "–î–∞–π –Ω–∞–∑–≤—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ, –¥–∞–ª–±–∞–π–æ–±.")
            return
        save_voice_message(name, message.voice)


def save_voice_message(name, voice_message):
    voice_message = VoiceMessage(name=name, file_id=voice_message.file_id)
    session.add(voice_message)
    session.commit()


@bot.message_handler(commands=['send'])
def handle_send_command(message):
    command_parts = message.text.split(maxsplit=1)
    if len(command_parts) == 2:
        voice_message_name = command_parts[1]
        send_voice_message(message.chat.id, voice_message_name)
    else:
        bot.reply_to(message, "–ù–∞–ø–∏—à–∏ –Ω–∞–∑–≤—É –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ.")


def send_voice_message(chat_id, voice_message_name):
    voice_message = session.query(VoiceMessage).filter(VoiceMessage.name.ilike(voice_message_name)).first()
    if voice_message:
        bot.send_voice(chat_id, voice_message.file_id, caption=voice_message.name)
    else:
        bot.send_message(chat_id, "–ù–µ–º–∞ —Ç–∞–∫–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ, –¥–æ–¥—ñ–∫.")


@bot.message_handler(commands=['list'])
def handle_list_command(message):
    all_voice_messages = session.query(VoiceMessage).all()

    if all_voice_messages:
        voice_message_list = "\n".join([f"{i + 1}. {voice.name}" for i, voice in enumerate(all_voice_messages)])
        bot.send_message(message.chat.id, f"–î–æ—Å—Ç—É–ø–Ω—ñ –≥–æ–ª–æ—Å–æ–≤—ñ:\n{voice_message_list}")
    else:
        bot.send_message(message.chat.id, "–ê –Ω–µ–º–∞ –Ω—ñ—Ö—É—è, –±–ª—è—Ç—å.")


# Start the bot
bot.polling()
